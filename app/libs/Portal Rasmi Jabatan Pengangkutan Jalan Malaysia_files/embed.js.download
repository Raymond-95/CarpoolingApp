(function() {
    'use strict';

    var ERating = {
        APIBaseURL: '//gov.mdec.com.my/erating-api',
        assetBaseURL: '//gov.mdec.com.my/erating-snippet', 
        surveyURL: '/getSurveyByKey/',
        responseURL: '/publicResponse',
        jqueryPath: '/jquery-1.12.4.min.js',
        stylePath: '/style.css',
        eratingReady: eratingReady
    };
    var container = document.getElementById("erating_container");
    var jQuery;
    var response_id;
    var answeredAll = 0;

    if (window.jQuery === undefined || window.jQuery.fn.jquery !== '1.12.4') {
        var script_tag = document.createElement('script');
        script_tag.setAttribute("type", "text/javascript");
        script_tag.setAttribute("src", ERating.assetBaseURL + ERating.jqueryPath);
        if (script_tag.readyState) {
            script_tag.onreadystatechange = function() { // For old versions of IE
                if (this.readyState === 'complete' || this.readyState === 'loaded') {
                    scriptLoadHandler();
                }
            };
        } else { // Other browsers
            script_tag.onload = scriptLoadHandler;
        }
        // Try to find the head, otherwise default to the documentElement
        (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(script_tag);
    } else {
        // The jQuery version on the window is the one we want to use
        jQuery = window.jQuery;
        main();
    }

    function scriptLoadHandler() {
        jQuery = window.jQuery.noConflict(true);
        main();
    }

    function main() {
        ERating._readyInterval = window.setInterval(ERating.eratingReady, 500);
    }

    function eratingReady() {
        // Check for presence of required DOM elements or other JS your widget depends on
        container = document.getElementById("erating_container");
        if (container) {
            var css_link = jQuery("<link>", { 
                rel: "stylesheet", 
                type: "text/css", 
                href: ERating.assetBaseURL + ERating.stylePath 
            });
            css_link.appendTo('head'); 

            window.clearInterval(ERating._readyInterval);

            container.style.padding = "20px 50px 20px 50px";

            var surveyURL = ERating.APIBaseURL + ERating.surveyURL + '' + erating_identifier;
            jQuery.get(surveyURL, function(data) {

                    if ( data.code == 401 ) {
                        var t = document;
                        var e = t.createElement('h2');
                        var attr = t.createAttribute('style');
                        var c = t.createTextNode('This survey is currently not available');
                        e.setAttribute('style','color: #e61919; text-align: center;' );
                        e.appendChild(c);
                        (t.getElementById('erating_container') || t.body).appendChild(e);
                    }
                    else { 
                        
                        ERating.survey = formatSurvey(data.survey);
                        response_id = data.response.response_id;
                        renderSurvey();
                    }
                })
                .fail(function() {
                   jQuery('#erating_container').html('Terima kasih kerana menggunakan perkhidmatan kami');
                });
        }
    }

    function formatSurvey(survey) {
        
        var s = {
            id: survey.survey_id,
            name: survey.survey_name,
            description: survey.survey_description,
            status: survey.survey_status,
            default_language: survey.language.code,
            current_language: survey.language.code,
            'en': {
                questions: [],
                submit: 'Submit',
                likely: 'Extremely Likely',
                likely_not: 'Not Likely',
                submitDisabled: 'Please answer all questions given.',
                submitText: 'Response received.',
                thanks: 'Thank you.',
                limitText: 'Limited to 500 characters.'
            },
            'my': {
                questions: [],
                submit: 'Hantar',
                likely: 'Sangat Bersetuju',
                likely_not: 'Tidak Bersetuju',
                submitDisabled: 'Sila jawab semua soalan yang telah diberi.',
                submitText: 'Respon diterima.',
                thanks: 'Terima kasih.',
                limitText: 'Terhad kepada 500 aksara.'
            }
        };

        if(typeof survey.survey_texts !== 'undefined') {
            s.en.welcome_message = survey.survey_texts[0].welcome_message;
            s.en.exit_message = survey.survey_texts[0].exit_message;
            s.my.welcome_message = survey.survey_texts[1].welcome_message;
            s.my.exit_message = survey.survey_texts[1].exit_message;
        }

        if(typeof survey.questions !== 'undefined' &&
            survey.questions.length > 0) {

            survey.questions.sort(function(a, b) {
              var seqA = Number(a.pivot.sequence) ;
              var seqB = Number(b.pivot.sequence) ;
              if (seqA < seqB) {
                return -1;
              }
              if (seqA > seqB) {
                return 1;
              }
              return 0;
            });

            for(var i=0;i<survey.questions.length;i++) {
                var q = survey.questions[i];

                var choices = {
                    'en': [],
                    'my': []
                };

                for(var j=0;j<q.choices.length;j++) {
                    var c = q.choices[j];
                    
                    var child_en = null;
                    var child_my = null;
                    
                    if(c.child_question){
                        var c_choices_en = [];
                        var c_choices_my = [];

                        child_en  = [];
                        child_my  = [];

                        c.child_question.choices.forEach(function(e){
                            c_choices_en.push({
                                id: e.choice_id,
                                text: e.choice_text,
                                value: e.choice_value
                            });

                            c_choices_my.push({
                                id: e.choice_id,
                                text: e.choice_text_my,
                                value: e.choice_value
                            });
                        });
                        
                        child_en.push({
                            id : c.child_question_id ,
                            text : c.child_question.question_texts[0].question_text,
                            type_id : c.child_question.question_type_id,
                            choices: c_choices_en
                        });

                        child_my.push({
                            id : c.child_question_id ,
                            text : c.child_question.question_texts[1].question_text,
                            type_id : c.child_question.question_type_id,
                            choices: c_choices_my
                        });                        

                    }

                    choices.en.push({
                        id: c.choice_id,
                        value: c.choice_value,
                        text: c.choice_text,
                        child: child_en 
                    });

                    choices.my.push({
                        id: c.choice_id,
                        value: c.choice_value,
                        text: c.choice_text_my,
                        child: child_my
                    });
                }

                s.en.questions.push({
                    id: q.question_id,
                    text: q.question_texts[0].question_text,
                    type: q.question_type,
                    choices : choices.en
                });

                s.my.questions.push({
                    id: q.question_id,
                    text: q.question_texts[1].question_text,
                    type: q.question_type,
                    choices: choices.my
                });
            }
        }

        return s;
    }

    function isWrappedHtml(s) {
        return s.charAt(0) === '<';
    }

    function createContainer(hasBorder) {
        var div = jQuery('<div class="erating-div" style="padding: 10px; margin-bottom: 10px; position: relative;"></div>');
        if(hasBorder) {
            div.css('border', '1px #B2EBF2 solid');
            div.css('background-color','#B2EBF2');
        }
        jQuery('.erating-div').focus(function(){
            checkQuestion();
        });
        return div;
    }

    function renderLangButtons() {
        var x = '<div style="float:right">\
                    <button type="button" class="btn-lang btn btn-default btn-lang" id="myButton">Bahasa Malaysia</button>\
                    <button type="button" class="btn-lang btn btn-default btn-lang" id="enButton">English</button>\
                </div>\
                <div style="clear:both; margin-bottom: 10px"></div>';
        jQuery('#erating_container').append(jQuery(x));
        jQuery('#myButton').unbind().click(function(){
            if(ERating.survey.current_language.toLowerCase() !== 'my') {
                ERating.survey.current_language = 'my';
                jQuery('#erating_container').empty();
                renderSurvey();
                jQuery('#myButton').css('background-color','#FF5252');
            }
        });

        jQuery('#enButton').unbind().click(function(){
            if(ERating.survey.current_language.toLowerCase() !== 'en') {
                ERating.survey.current_language = 'en';
                jQuery('#erating_container').empty();
                renderSurvey();
                jQuery('#enButton').css('background-color','#FF5252');
            }
        });
    }

    function renderWelcomeMessage(msg) {
        msg = isWrappedHtml(msg) ? jQuery(msg) : jQuery('<span>'+msg+'</span>');
        var div = createContainer(true);
        div.append(msg);
        jQuery('#erating_container').append(div);
    }

    function renderExitMessage(msg) {
        msg = isWrappedHtml(msg) ? jQuery(msg) : jQuery('<span>'+msg+'</span>');
        var div = createContainer(true);
        div.css('margin-top', '20px');        
        div.append(msg);
        jQuery('#erating_container').append(div);
    }

    function renderRadioQuestion(q, idx) {

        var div = createContainer(false);
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        for(var i=0;i<q.choices.length; i++) {
            var c = q.choices[i];
            var input = jQuery('<input type="radio" name="question'+idx+'" id="question'+idx+'" value="'+c.id+'" class="ml-50 checkQuestion"/> '+c.text+'<br/>');
            div.append(input);
        }

        jQuery('#erating_container').append(div);
    }

    function renderCheckBoxQuestion(q, idx) {

        var div = createContainer(false);
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        for(var i=0;i<q.choices.length; i++) {
            var c = q.choices[i];
            var input = jQuery('<input type="checkbox" id="checkbox' + idx + i + '" name="question'+idx+'[]" value="'+c.id+'" class="ml-50 checkQuestion" /> '+c.text+'<br/>');
            div.append(input);   
        }
         
        jQuery('#erating_container').append(div);
    }


    function renderDropdownQuestion(q, idx) {
        
        var div = createContainer(false);
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        var select = jQuery('<select name="question'+idx+'" id="question'+idx+'" class="ml-50 checkQuestion"></select>');
        for(var i=0;i<q.choices.length; i++) {
            var c = q.choices[i];
            select.append(jQuery('<option value="'+c.id+'">'+c.text+'</option>'));
        }
        div.append(select);
         
        jQuery('#erating_container').append(div);
    }

    function renderEmoticonQuestion(q, idx, s) {

        var div = createContainer(false);        
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));
        div.attr('id', 'div-emoticon'+idx);

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        q.selectedImgIdx = null;
        q.selectedImgId = null;

        var table_emoticons = jQuery('<table class="ml-50" style="border-collapse: separate;border-spacing: 10px;"></table>');
        var tr_emoticons = jQuery('<tr class="ml-50"></tr>');
        
        for(var i=0;i<q.choices.length; i++) {
            var c = q.choices[i];
            // var img = jQuery('<img data-emoticon-value="'+c.id+'" id="'+c.id+'" src="'+ERating.assetBaseURL+'/face-'+(i+1)+'.png"/>');
            // img.css('width', '120px');

            var pos_x = (5-i)* 100;
            var pos_y = 0;
            var left = (i+1)*100 ;
            var td_emoticon = jQuery('<td data-emoticon-value="'+c.id+'" id="'+c.id+'" class="face" style="background-position: '+ pos_x + 'px ' + pos_y+ 'px;"> </td>');

            var child_div = jQuery('<div id="choices-child-' + q.id + '" class="ml-50"></div>');

            (function(idx, c_id, c, i){
                jQuery(td_emoticon).unbind().click(function(){

                    jQuery('.face').css('background-position-y', 0+'px');
                    jQuery('.face').removeAttr('data-emoticon-selected');

                    jQuery(this).css('background-position-y', 115+'px');
                    jQuery(this).attr('data-emoticon-selected', 'true');

                    jQuery('#' + 'choices-child-' + q.id).empty();
                    
                    if(c.child){
                        
                        var cc = c.child[0];
                        var input = '';

                        if(Number(cc.type_id) === 6){
                            
                            input = '<input type="text" name="question'+cc.id+'" id="question'+idx+'-text" class="checkQuestion" style="margin-left: 0px; margin-top: 5px;" maxlength="500" ><br/><small>'+ s.limitText +'</small>'; //onkeyUp="this.checkQuestion();"
                            
                        } else if (Number(cc.type_id) === 2){

                            for(var j=0;j<cc.choices.length; j++) {
                                var a = cc.choices[j];
                               input += '<input type="checkbox" id="checkbox' + idx + '-' +j+'" name="question'+idx+'-checkbox[]" value="'+a.id+'" class="checkQuestion" /> '+a.text+'<br/>';
                            }

                        } else if (Number(cc.type_id) === 1) {
                            for(var j=0;j<cc.choices.length; j++) {
                                var a = cc.choices[j];
                               input += '<input type="radio" name="question' +idx+ '-radio" id="question'+idx+'-'+i+'" value="'+a.id+'" class="checkQuestion"/> '+a.text+'<br/>';
                            }

                        }

                        // enable this if child-question is in use
                        // child_div.append('<div style="margin-top:15px;">' + cc.text + input + '</div>');
                    }

                    checkQuestion();

                });


            })(idx, c.id, c, i);

            tr_emoticons.append(td_emoticon);
        }


        table_emoticons.append(tr_emoticons);
        div.append(table_emoticons);
        div.append(child_div);

        var div_ul = jQuery('<div></div>');
        jQuery('#erating_container').append(div);
    }

    function renderScaleQuestion(q, idx, s) {
        
        var div = createContainer(false);
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        q.selectedImgIdx = null;
        q.selectedImgId = null;
        var btngroupall = jQuery('<div class="btn-group ml-50 scale-btn-group" ></div>');
        var btngroup = jQuery('<div class="scale-btn" ></div>');

        btngroupall.append('<div class="scale-like-not"> ' + s.likely_not + '</div>');
        btngroupall.append('<div class="scale-like-yes"> ' + s.likely + '</div>');


        for(var i=0;i<q.choices.length; i++) {
            var c = q.choices[i];
            
           var button = jQuery('<button type="button" class="btn btn-default btn-scale"  data-emoticon-value="'+c.id+'" id="'+c.id+'">'+c.text+'</button>');
            (function(idx, c_id){
                jQuery(button).unbind().click(function() {
                    jQuery(this).css('background-color','#C4C4C4');
                    jQuery(this).attr('data-emoticon-selected', 'true');
                    if(q.selectedImgId) {
                        jQuery('#'+q.selectedImgId).css('background-color','');
                        jQuery('#'+q.selectedImgId).removeAttr('data-emoticon-selected');
                    }

                    q.selectedImgIdx = idx;
                    q.selectedImgId = c_id;

                    checkQuestion();
                });
            })(i+1, c.id);
            btngroup.append(button);
        }

        btngroupall.append(btngroup);
        div.append(btngroupall);       
        jQuery('#erating_container').append(div);
    }

    function renderTextQuestion(q, idx, s) {
        
        var div = createContainer(false);
        div.append(jQuery('<p class="question-number">' + idx + '</p>'));

        if(isWrappedHtml(q.text)) {
            div.append(jQuery(q.text));
            div.find('p').addClass('question-text');
        } else {
            div.append(jQuery('<p class="question-text">'+q.text+'</p>'));
        }

        var input = jQuery('<input type="text" name="question'+idx+'" id="question'+idx+'" class="checkQuestion" maxlength="500"><small class="ml-50">'+ s.limitText +'</small>');
        div.append(input);
        
        jQuery('#erating_container').append(div);

        jQuery('#erating_container input[type="text"]').on('change paste keyup',function(){
            checkQuestion();

        });
    }

    function submitButtonAction(s){
        var responses = [];

            for(var i=1;i<=s.questions.length;i++) {
                var q = s.questions[i-1];
                var choice_values = [];
                var type;
                var text_response = '';

                switch(q.type.code) {
                    case 'RADIO': 
                        choice_values.push(jQuery("input[name='question"+i+"']:checked").val());
                        type = 'single';
                        break;

                    case 'CHECKBOX': 
                        jQuery("input[name='question"+i+"[]']:checked").each(function(){
                            choice_values.push(jQuery(this).val());
                        });
                        type = 'multiple';
                        break;

                    case 'DROPDOWN': 
                        choice_values.push(jQuery('#question'+i).val());
                        type = 'single';
                        break;

                    case 'EMOTICON': 
                        choice_values.push(jQuery('td[data-emoticon-selected]').data('emoticon-value'));
                        type = 'single';
                        q.choices.forEach(function(e,j){
                            if(e.id == choice_values){
                                if(e.child){
                                    var cc = e.child[0];
                                    var type_id = Number(cc.type_id);
                                    var child_choice_values = [];

                                    switch(type_id) {
                                        case 1 :
                                        child_choice_values.push(jQuery("input[name='question"+i+"-radio']:checked").val());
                                        type = 'single';
                                        break;

                                        case 2 :
                                        jQuery("input[name='question"+i+"-checkbox[]']:checked").each(function(){
                                            child_choice_values.push(jQuery(this).val());
                                        });
                                        type = 'multiple';
                                        break;

                                        case 6 : 
                                        text_response = jQuery('#question'+i+'-text').val();
                                        type = 'text';
                                        break;
                                    }

                                    var response = {
                                        survey_id: ERating.survey.id,
                                        question_id: cc.id,
                                        choices: child_choice_values,
                                        text_response: text_response,
                                        type: type
                                    };

                                    responses.push(response);


                                    text_response = '';
                                }
                            }
                        })
                        break;

                    case 'SCALE': 
                        choice_values.push(jQuery('button[data-emoticon-selected]').data('emoticon-value'));
                        type = 'single';
                        break;

                    case 'TEXT': 
                        text_response = jQuery('#question'+i).val();
                        type = 'text';
                        break;
                }

                var response = {
                    survey_id: ERating.survey.id,
                    question_id: q.id,
                    choices: choice_values,
                    text_response: text_response,
                    type: type
                };

                responses.push(response);             
            }
            
            var updateResponse = {
                survey_id: ERating.survey.id,
                service_key: erating_identifier,
                response_id: response_id,
                responses: responses
            };
            
            var responseURL = ERating.APIBaseURL + '' + ERating.responseURL;
            jQuery.ajax({
                type: 'POST',
                url: responseURL,
                data: JSON.stringify(updateResponse),
                beforeSend: function() {
                    jQuery('#erating_container').empty();
                    jQuery('#erating_container').append('<p style="text-align: center;">' + s.submitText + ' ' + s.thanks + '</p>');
                },
                success: function(data) { 
                    jQuery('#erating_container').empty();
                    jQuery('#erating_container').append(jQuery('<p style="text-align: center;">' + s.thanks + '</p>'));
                },
                error: function() {
                    jQuery('#erating_container').empty();
                    jQuery('#erating_container').append(jQuery('<p style="text-align: center;">' + s.thanks + '</p>'));
                },
                contentType: "application/json",
                dataType: 'json'
            });
    }

    function renderActionButtons() {
        var s = ERating.survey.current_language.toLowerCase() === 'en' ? 
            ERating.survey.en : ERating.survey.my;

        var x = '<div style="float:right">\
                    <div id="submitDisabledText" style="float:left; height:40px; padding:10px;" >' + s.submitDisabled + '</div>\
                    <label id="submitButton" class="btn btn-default">' + s.submit + '</label>\
                </div>\
                <div style="clear:both; margin-bottom: 10px"></div>';
        jQuery('#erating_container').append(jQuery(x));
        
        var submit = jQuery('#submitButton').unbind().click(function(){
            submitButtonAction(s);
        });
        
        if (answeredAll === 0){
            jQuery('#submitButton').off('click');
            jQuery('#submitButton').css('opacity','0.5');
            jQuery('#submitDisabledText').hide();    
        }
        
        jQuery('#submitButton').hover(function(){
            if(jQuery('#submitButton').css('opacity') == 0.5){
                jQuery('#submitDisabledText').show();    
            } else {
                jQuery('#submitDisabledText').hide();    
            }
        });

        checkQuestion();
    }

    function checkQuestion(){
        
        var s = ERating.survey.current_language.toLowerCase() === 'en' ? 
            ERating.survey.en : ERating.survey.my;
        var responses = [];
            for(var i=1;i<=s.questions.length;i++) {
                var q = s.questions[i-1];
                var answered = 0;

                switch(q.type.code) {
                    case 'RADIO': 
                            if (jQuery("input[name='question"+i+"']:checked").length > 0){
                                answered = 1;
                            }
                        break;
                    case 'CHECKBOX':
                            if (jQuery("input[name='question"+i+"[]']:checked").length > 0){
                                answered = 1;
                            }
                        break;
                    case 'DROPDOWN': 
                            if (jQuery("#question"+i+" option:selected").val()){
                                answered = 1;
                            }
                        break;
                    case 'EMOTICON': 
                        var emoticon_selected = jQuery('td[data-emoticon-selected]').data('emoticon-value');
                        if(jQuery('td[data-emoticon-selected]').data('emoticon-value')){
                            answered = 1;

                            q.choices.forEach(function(e,j){
                                if(e.id == emoticon_selected){
                                    if(e.child){
                                        var cc = e.child[0];
                                        var type_id = Number(cc.type_id);
                                        var child_choice_values = [];

                                        switch(type_id) {
                                            case 1 :
                                            if(jQuery("input[name='question"+i+"-radio']").length != 0){
                                                
                                                if (jQuery("input[name='question"+i+"-radio']:checked").length > 0){
                                                    answered = 1;
                                                } else {
                                                    answered = 0;
                                                }
                                            }
                                            break;

                                            case 2 :
                                            if(jQuery("input[name='question"+i+"-checkbox[]']").length != 0){
                                                
                                                if (jQuery("input[name='question"+i+"-checkbox[]']:checked").length > 0){
                                                    answered = 1;
                                                } else {
                                                    answered = 0;
                                                }
                                            }
                                            break;

                                            case 6 : 
                                            if(jQuery('#question'+i+'-text').length != 0){
                                                
                                                if(jQuery('#question'+i+'-text').val()){
                                                    answered = 1;
                                                } else {
                                                    answered = 0;
                                                }
                                            }
                                            break;
                                        }

                                    }
                                }
                            })
                        }
                        break;
                    case 'SCALE': 
                            if(jQuery('button[data-emoticon-selected]').data('emoticon-value')){
                                answered = 1;
                            }
                        break;
                    case 'TEXT': 
                            if(jQuery('#question'+i).val()){
                                answered = 1;
                            }
                        break;
                }

                var response = {
                    question_id: q.id,
                    question_no : i,
                    answered: answered
                };

                responses.push(response);
            }
            answeredAll = 1
            responses.forEach(function(e){
                if(e.answered === 0){
                    answeredAll = 0;
                }
            });

            if(answeredAll === 1){
                jQuery('#submitButton').on('click',function(){
                    submitButtonAction(s);
                });
                jQuery('#submitButton').css('opacity','1');
                jQuery('#submitDisabledText').hide(); 
            }else {
                jQuery('#submitButton').off('click');
                jQuery('#submitButton').css('opacity','0.5');
                jQuery('#submitDisabledText').hide();
            }
    }

    function renderSurvey() {
        var s = ERating.survey.current_language.toLowerCase() === 'en' ? 
            ERating.survey.en : ERating.survey.my;

        renderLangButtons();
        
        if(s.welcome_message !== '' && s.welcome_message !== '<p></p>'){
            renderWelcomeMessage(s.welcome_message);
        }

        if(ERating.survey.current_language.toLowerCase() === 'en'){
            jQuery('#enButton').css('background-color','#FF5252');
        } else {
            jQuery('#myButton').css('background-color','#FF5252');
        }

        for(var i=1;i<=s.questions.length;i++) {
            var q = s.questions[i-1];

            switch(q.type.code) {
                case 'RADIO': 
                    renderRadioQuestion(q, i);
                    break;
                case 'CHECKBOX': 
                    renderCheckBoxQuestion(q, i);
                    break;
                case 'DROPDOWN': 
                    renderDropdownQuestion(q, i);
                    break;
                case 'EMOTICON': 
                    renderEmoticonQuestion(q, i, s);
                    break;
                case 'SCALE': 
                    renderScaleQuestion(q, i, s);
                    break;
                case 'TEXT': 
                    renderTextQuestion(q, i, s);
                    break;
            }
        }
        
        if(s.exit_message !== '' && s.exit_message !== '<p></p>'){
            renderExitMessage(s.exit_message);
        }

        renderActionButtons();

        jQuery('#erating_container').on('change paste keyup','.checkQuestion', function(){
            checkQuestion();
        });

    }


}).call(this);
